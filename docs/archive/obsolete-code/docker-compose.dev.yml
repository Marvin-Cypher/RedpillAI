version: '3.8'

services:
  # PostgreSQL Database - Persistent and Stable
  postgres:
    image: postgres:15
    container_name: redpill-postgres
    environment:
      POSTGRES_DB: redpill
      POSTGRES_USER: redpill
      POSTGRES_PASSWORD: redpill123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U redpill"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Cache - For backend caching
  redis:
    image: redis:7-alpine
    container_name: redpill-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Backend API - Stable containerized version
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: redpill-backend
    environment:
      - DATABASE_URL=postgresql://redpill:redpill123@postgres:5432/redpill
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=sk-9JABKD0bYW6s8VN6PoIG0LUOj1uo44TrXm0MNJWXe7GWP1wR
      - DEBUG=true
      - ALLOWED_ORIGINS=http://localhost:3004,http://127.0.0.1:3004
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data: